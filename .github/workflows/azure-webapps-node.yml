<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ðŸŽ‰ Happy Birthday Abdulmajeed! ðŸŽ‚</title>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            margin: 0;
            padding: 0;
            text-align: center;
            background: linear-gradient(to bottom, #ffdde1, #ee9ca7);
            color: #333;
        }
        .container {
            max-width: 500px;
            margin: 50px auto;
            padding: 30px;
            background: #fff;
            border-radius: 12px;
            box-shadow: 0 8px 15px rgba(0, 0, 0, 0.2);
        }
        h1 {
            color: #ff6363;
            font-size: 2.5rem;
            margin: 0 0 10px;
            font-family: 'Georgia', serif;
        }
        h2 {
            color: #333;
            font-size: 1.8rem;
            margin: 0 0 20px;
        }
        p {
            font-size: 1rem;
            color: #555;
        }
        input[type="text"] {
            padding: 12px;
            width: calc(100% - 24px);
            margin-bottom: 15px;
            font-size: 16px;
            border: 1px solid #ccc;
            border-radius: 8px;
            outline: none;
            transition: border 0.3s;
        }
        input[type="text"]:focus {
            border-color: #ff6363;
        }
        button {
            padding: 12px 25px;
            font-size: 16px;
            font-weight: bold;
            color: #fff;
            background-color: #ff6363;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            transition: background-color 0.3s;
        }
        button:hover {
            background-color: #e45454;
        }
        #response {
            margin-top: 20px;
            font-size: 18px;
            color: #28a745;
            opacity: 0;
            transform: translateY(10px);
            transition: opacity 0.3s, transform 0.3s;
        }
        #response.show {
            opacity: 1;
            transform: translateY(0);
        }
        .emoji {
            font-size: 2.5rem;
            margin-bottom: 20px;
            animation: bounce 1.5s infinite;
        }
        @keyframes bounce {
            0%, 100% {
                transform: translateY(0);
            }
            50% {
                transform: translateY(-10px);
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="emoji">ðŸŽ‚</div>
        <h1>Happy Birthday Abdulmajeed!</h1>
        <h2>ðŸŽ‰ Let's Celebrate Your Day! ðŸŽ‰</h2>
        <p>Write your heartfelt wishes for Abdulmajeed below and make his day even brighter!</p>

        <input type="text" id="wishInput" placeholder="Write your wishes here..." aria-label="Enter your wishes" required>
        <button onclick="submitWish()">Submit</button>

        <div id="response" role="alert"></div>
    </div>

    <script>
        function escapeHTML(str) {
            return str.replace(/[&<>"']/g, char => ({
                '&': '&amp;',
                '<': '&lt;',
                '>': '&gt;',
                '"': '&quot;',
                "'": '&#39;'
            })[char]);
        }

        function submitWish() {
            const inputField = document.getElementById("wishInput");
            const responseDiv = document.getElementById("response");
            const wish = inputField.value.trim();

            if (!wish) {
                alert("Please write your wishes for Abdulmajeed.");
                inputField.focus();
                return;
            }

            // Sanitize the user input
            const sanitizedWish = escapeHTML(wish);

            // Display the response message
            responseDiv.textContent = `ðŸŽ‰ Thank you for your wishes for Abdulmajeed! ðŸŽ‚`;
            responseDiv.classList.add("show");

            // Clear the input field
            inputField.value = "";

            // Optional: Remove the message after a delay
            setTimeout(() => {
                responseDiv.classList.remove("show");
            }, 5000);
        }
    </script>
</body>
</html>




# This workflow will build and push a node.js application to an Azure Web App when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/en-us/azure/app-service/quickstart-nodejs?tabs=linux&pivots=development-environment-cli
#
# To configure this workflow:
#
# 1. Download the Publish Profile for your Azure Web App. You can download this file from the Overview page of your Web App in the Azure Portal.
#    For more information: https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials
#
# 2. Create a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE, paste the publish profile contents as the value of the secret.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Change the value for the AZURE_WEBAPP_NAME. Optionally, change the AZURE_WEBAPP_PACKAGE_PATH and NODE_VERSION environment variables below.
#
# For more information on GitHub Actions for Azure: https://github.com/Azure/Actions
# For more information on the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: your-app-name    # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  NODE_VERSION: '20.x'                # set this to the node version to use

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: npm install, build, and test
      run: |
        npm install
        npm run build --if-present
        npm run test --if-present

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v3
      with:
        name: node-app
        path: .

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v3
      with:
        name: node-app

    - name: 'Deploy to Azure WebApp'
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
